C51 COMPILER V9.53.0.0   MAIN                                                              02/15/2023 15:07:20 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: D:\arm\keil_c51\C51\BIN\C51.EXE Code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Include) DEFINE(FOSC_
                    -160000) DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(main.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 GPIO demo code
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "ws2812.h"
  22          
  23          
  24          #define UVC__ON() (P04 = 1)
  25          #define UVC_OFF() (P04 = 0)
  26           
  27          //#define RED__ON()  (P04 = 1)
  28          //#define RED_OFF()  (P04 = 0)
  29          
  30          //xyq
  31          #define GPIO_RED_ON()  P11 = 0
  32          #define GPIO_RED_OFF() P11 = 1
  33          
  34          #define GPIO_BLUE_ON()  P11 = 0;P12 = 0
  35          #define GPIO_BLUE_OFF() P11 = 1;P12 = 1
  36          
  37          #define POWER__ON()  (P00 = 1)
  38          #define POWER_OFF()  (P00 = 0)
  39          
  40          #define RGB_PUR_ON()  P11 = 0;P12 = 0;PWM1_P11_OUTPUT_ENABLE;PWM0_P12_OUTPUT_ENABLE
  41          #define RGB_PUR_OFF() P11 = 1;P12 = 1;PWM1_P11_OUTPUT_DISABLE;PWM0_P12_OUTPUT_DISABLE
  42          
  43          #define PIN_KEY   P01
  44          #define KEY_DOWN() PIN_KEY == 0
  45          #define KEY___UP() PIN_KEY != 0
C51 COMPILER V9.53.0.0   MAIN                                                              02/15/2023 15:07:20 PAGE 2   

  46          
  47          //uvc ???
  48          #define BEEP_OFF()  P03 =0;PWM5_P03_OUTPUT_DISABLE
  49          #define BEEP__ON()  PWM5_P03_OUTPUT_ENABLE
  50          
  51          #define PWM_HZ 2150  // 1016 0x03F8 ??
  52          
  53          void Close();
  54          
  55          void PWM_Init()
  56          {    
  57   1          //pwm 0.5 1.5
  58   1          
  59   1          PWM5_P03_OUTPUT_ENABLE;//??PWM5,??P03????
  60   1          PWM1_P11_OUTPUT_ENABLE;
  61   1          PWM0_P12_OUTPUT_ENABLE;
  62   1          //PWM5_P15_OUTPUT_ENABLE;
  63   1          //PWM2_P05_OUTPUT_ENABLE;
  64   1      
  65   1          clr_PWMTYP;//??????
  66   1          clr_PWMMOD0;//?????????
  67   1          clr_PWMMOD1;
  68   1          PWM_CLOCK_DIV_8;//8????
  69   1          PWMPH = (PWM_HZ >> 8);//
  70   1          //1999(Dec) 4000&  250  4000 50 4000 30
  71   1          PWMPL = (PWM_HZ & 0xff);
  72   1          set_SFRPAGE;//PWM4 and PWM5 duty seting is in SFP page 1
  73   1          PWM5H = (PWM_HZ / 2 >> 8);//500(Dec)                                
  74   1          PWM5L = (PWM_HZ / 2 & 0xff);
  75   1          
  76   1          PWM1H = (5 >> 8);//500(Dec)                                 
  77   1          PWM1L = (5 & 0xff); 
  78   1          
  79   1          PWM0H = (1800 >> 8);//500(Dec)                                      
  80   1          PWM0L = (1800 & 0xff);
  81   1          
  82   1          clr_SFRPAGE;                                                                                        
  83   1          set_LOAD;//????????
  84   1          set_PWMRUN;//????PWM    
  85   1          
  86   1          PWM5_P03_OUTPUT_DISABLE;
  87   1          PWM1_P11_OUTPUT_DISABLE;
  88   1          PWM0_P12_OUTPUT_DISABLE;
  89   1          //PWM2_P05_OUTPUT_DISABLE;
  90   1      
  91   1      }
  92          
  93          void GPIO_Init()
  94          {
  95   1              
  96   1              //??????
  97   1              P00_PushPull_Mode; //mcu out
  98   1          P04_PushPull_Mode; //uvc io
  99   1                      
 100   1              P03_PushPull_Mode; //beep ????pwm
 101   1          
 102   1          P11_PushPull_Mode; //red
 103   1          P12_PushPull_Mode;  
 104   1          
 105   1          P01_Input_Mode;        //button key
 106   1              
 107   1      }
C51 COMPILER V9.53.0.0   MAIN                                                              02/15/2023 15:07:20 PAGE 3   

 108          
 109          
 110          
 111          uint8_t test_mode_2 = 0; // when terun on button released, test_mode_2 = 1;
 112          
 113          uint8_t power_on_is_released = 0;
 114          uint8_t uvc_on_pre_10s = 0;
 115          
 116          void RedBlink(uint8_t f)
 117          {
 118   1          static uint16_t time_count_i;
 119   1          if (f)
 120   1          {
 121   2              time_count_i = 0;
 122   2              return;
 123   2          }
 124   1      
 125   1          time_count_i++;
 126   1          if (time_count_i == 1)
 127   1          {
 128   2              GPIO_RED_ON();
 129   2              
 130   2              if(uvc_on_pre_10s)
 131   2                  BEEP__ON();
 132   2          }
 133   1          
 134   1          if (time_count_i == (20 * 3))
 135   1          {
 136   2              GPIO_RED_OFF();
 137   2          }
 138   1          
 139   1          if (time_count_i == (5 * 3))
 140   1          {
 141   2              BEEP_OFF();
 142   2          }
 143   1          
 144   1          if ( time_count_i == 100)
 145   1          {
 146   2              if(uvc_on_pre_10s) 
 147   2                  time_count_i = 0;
 148   2          }
 149   1          
 150   1          if (time_count_i == 150)
 151   1          {
 152   2              time_count_i = 0;
 153   2          }
 154   1      }
 155          
 156          
 157          void main (void) 
 158          {
 159   1          //gpio?????
 160   1          
 161   1          static int time_count_i = 0;
 162   1          static int time_count_s = 0;
 163   1          int i = 0;
 164   1          int mode_flag = 0;
 165   1          
 166   1          Set_All_GPIO_Quasi_Mode;                                    // Define in Function_define.h
 167   1          //test?????
 168   1          TIMER0_MODE0_ENABLE;
 169   1      
C51 COMPILER V9.53.0.0   MAIN                                                              02/15/2023 15:07:20 PAGE 4   

 170   1          
 171   1          //pwm
 172   1          GPIO_Init();
 173   1          PWM_Init();
 174   1          
 175   1          POWER__ON();
 176   1          UVC_OFF();
 177   1          GPIO_RED_OFF();
 178   1          //GPIO_BLUE_OFF();
 179   1          RGB_PUR_OFF();
 180   1          BEEP_OFF();
 181   1         
 182   1          BEEP__ON();
 183   1          GPIO_RED_ON();
 184   1          Timer0_Delay1ms(100);
 185   1          BEEP_OFF();
 186   1          GPIO_RED_OFF();
 187   1      
 188   1          while(i < 1000)
 189   1          {
 190   2              i ++;
 191   2              if(KEY___UP())
 192   2                  break;
 193   2              Timer0_Delay1ms(1);
 194   2              
 195   2          }
 196   1          
 197   1          if(i >= 1000)
 198   1          {
 199   2              BEEP__ON();
 200   2              Timer0_Delay1ms(100);
 201   2              BEEP_OFF();
 202   2              
 203   2              //GPIO_BLUE_ON();
 204   2              RGB_PUR_ON();
 205   2              test_mode_2 = 2;
 206   2          }
 207   1          else
 208   1          {
 209   2              power_on_is_released = 1;
 210   2              RedBlink(1);
 211   2              test_mode_2 = 1;
 212   2              Timer0_Delay1ms(1000);
 213   2              uvc_on_pre_10s = 1;
 214   2          }
 215   1          
 216   1          while(1)
 217   1          {
 218   2      
 219   2              time_count_i ++;
 220   2              if(test_mode_2 == 1)
 221   2              {
 222   3                  RedBlink(0);
 223   3              }
 224   2              
 225   2              //?????????
 226   2              if((time_count_i % 100) == 0)
 227   2              {  
 228   3                  // + 1s
 229   3                  time_count_s++;
 230   3              }
 231   2              
C51 COMPILER V9.53.0.0   MAIN                                                              02/15/2023 15:07:20 PAGE 5   

 232   2              if(test_mode_2 == 1)
 233   2              {
 234   3                 
 235   3                  //if in uvc mode 
 236   3                  if(time_count_s == 10)
 237   3                  {
 238   4                      //after 10s, open UVC
 239   4                      UVC__ON();
 240   4                      uvc_on_pre_10s = 0;
 241   4                  }
 242   3              
 243   3                  if(time_count_s == (60 * 10))
 244   3                  {            
 245   4                      // turn off
 246   4                      Close();
 247   4                  }            
 248   3              }
 249   2              
 250   2              //????
 251   2              if(test_mode_2 == 2)
 252   2              {
 253   3                  if(time_count_s == (60 * 60 * 8))
 254   3                  {
 255   4                      Close();
 256   4                  }
 257   3              }
 258   2                  
 259   2              if(KEY___UP() && !power_on_is_released)
 260   2              {
 261   3                    power_on_is_released = 1;
 262   3              }
 263   2              
 264   2              if(KEY_DOWN() && power_on_is_released) // ??
 265   2              {             
 266   3                  Close();                  
 267   3              }
 268   2              Timer0_Delay1ms(10);
 269   2          }
 270   1      }
 271          
 272          void Close()
 273          {
 274   1          BEEP__ON();
 275   1          Timer0_Delay1ms(100);
 276   1          BEEP_OFF();    
 277   1          Timer0_Delay1ms(100);
 278   1          
 279   1          BEEP__ON();
 280   1          Timer0_Delay1ms(100);
 281   1          BEEP_OFF(); 
 282   1          
 283   1          while(1)
 284   1          {
 285   2              if(KEY___UP())
 286   2                  break;
 287   2              Timer0_Delay1ms(10);
 288   2          }
 289   1          
 290   1          POWER_OFF();
 291   1          Timer0_Delay1ms(1000);
 292   1               
 293   1      }
C51 COMPILER V9.53.0.0   MAIN                                                              02/15/2023 15:07:20 PAGE 6   

 294          
 295          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    602    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
